<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- namespace : 해당 mapper파일만의 고유한 별칭 -->


	<!-- * resultMap 마이바티스의 핵심 기능 중 하나 
		   ResultSet으로부터 조회된 컬럼값 하나씩 뽑아서 내가 지정한 VO 객체에 각필드에
		   담는(매핑) JDBC코드를 줄여주는 역할을 수행
		   
		   <resultMap id="식별자" type="조회결과를 담아서 반환하고자하는 vo객체의 타입">
		   		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명"/>
		   		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명"/>
		   		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명"/>
		   		<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명"/>
		   </resultMap>
	-->
	<resultMap id="memberResultSet" type="Member">
		<result column="user_no" property="userNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_pwd" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="email" property="email"/>
		<result column="birthday" property="birthday"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>
		<result column="address" property="address"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="status" property="status"/>
	</resultMap>

	
    <insert id="insertMember" parameterType="Member">
    	insert 
    	  into member
    	  (
    	    user_no
    	  , user_id
    	  , user_pwd
    	  , user_name
    	  , email
    	  , birthday
    	  , gender
    	  , phone
    	  , address
    	  )
    	  values
    	  (
    	    seq_uno.nextval
    	  , #{userId}
    	  , #{userPwd}
    	  , #{userName}
    	  , #{email}
    	  , #{birthday}
    	  , #{gender}
    	  , #{phone}
    	  , #{address}
    	  )
    </insert>
    
    <select id="loginMember" parameterType="Member"
    		resultMap="memberResultSet">
    	select
    		   user_no
    		 , user_id
    		 , user_pwd
    		 , user_name
    		 , email
    		 , birthday
    		 , gender
    		 , phone
    		 , address
    		 , enroll_date
    		 , modify_date
    		 , status
    	  from member
    	 where user_id = #{userId}
    	   and user_pwd = #{userPwd}
    	   and status = 'Y'
    </select>
    
    <!-- 
    	* DML문일 경우 
    	<insert|update|delete  id="식별자"  [parameterType="해당 sql문에 전달되는 값의 타입(풀클래스명)|별칭"]>
  		
  		=> DML문 같은 경우 어짜피 실행결과가 처리된행수(int)이기 때문에 resultType 또는 resultMap 작성안해도됨
  		
  		* SELECT문일 경우 
  		<select  id="식별자"  [parameterType="해당 sql문에 전달되는 값의 타입(풀클래스명)|별칭"]
  			resultType="조회결과를 반환하고자하는 자바 타입" | resultMap="조회결과를 뽑아서 매핑시킬 resultMap의 id">
  		
  		
  		* 공통적인 특징 
  		  ?(홀더) 대신에 해당 sql문에 전달된 객체|변수로 부터 값을 꺼낼때 #{필드명} 또는 #{변수명} 이용
  		  							  HashMap으로 부터 값을 꺼낼때 #{키값}
  		  
    -->
    
    
    
    
    
    
    
    
    
    
    
    
    

</mapper>